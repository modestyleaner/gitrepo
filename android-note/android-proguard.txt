proguard 代码混淆，压缩

  android2.3 之前，在生成的项目根目录，有一个proguard.cfg 文件，为默认的混淆设置，
  只需要在project.properties 中进行设置： proguard.config=proguard.cfg 
  
  andorid2.3之后，项目默认没有proguard.cfg,而是在默认sdk目录： ${sdk.dir}/tools/proguard/proguard-android.txt:progu
  ard-android.txt
  
  
  
 ================================================================= 
  使用proguard，只有在release版本才能进行混淆。生成apk，在项目根目录生成一个proguard目录：
   包含以下文件：
   dump.txt   描述apk内所有class文件的内部结构。
   mapping.txt  表示混淆前后代码的对照表
   seeds.txt  列出了没有被混淆的类和成员
   usage.txt  列出了源代码中被删除在apk中不存在的代码
   
====================================================================
不能混淆的代码：
  1 使用反射的代码
  2 系统接口
  3 Jni接口
  
=====================================================================
代码 retrace ：

  java -jar retrace.jar [options...] mapping_file [stacktrace_file]
  
  options:  -verbose -regex 
  
========================================================================
android编译打包 3中方式： 
  1 eclipse +adt
  2 命令行手动编译打包
  3 使用ant自动编译打包
  
android编译打包步骤：
  	第一步 生成R.java类文件： 
	Eclipse中会自动生成R.java，ant和命令行使用android SDK提供的aapt.ext程序生成R.java。
	
	第二步 将.aidl文件生成.java类文件： 
	Eclipse中自动生成，ant和命令行使用android SDK提供的aidl.exe生成.java文件。
	
	第三步 编译.java类文件生成class文件： 
	Eclipse中自动生成，ant和命令行使用jdk的javac编译java类文件生成class文件。
	
	第四步 将class文件打包生成classes.dex文件： 
	Eclipse中自动生成,ant和命令行使用android SDK提供的dx.bat命令行脚本生成classes.dex文件。
	
	第五步 打包资源文件（包括res、assets、androidmanifest.xml等）： 
	Eclipse中自动生成,ant和命令行使用Android SDK提供的aapt.exe生成资源包文件。
	
	第六步 生成未签名的apk安装文件： 
	Eclipse中自动生成debug签名文件存放在bin目录中，ant和命令行使用android SDK提供的apkbuilder.bat命令脚
	本生成未签名的apk安装文件。
	
	第七步 对未签名的apk进行签名生成签名后的android文件： 
	Eclipse中使用Android Tools进行签名，ant和命令行使用jdk的jarsigner对未签名的包进行apk签名。   
----------------------------------------------------------------------------
proguard :http://blog.csdn.net/dai_zhenliang/article/details/42423575
android ant 编译详解： http://blog.csdn.net/zuolongsnail/article/details/6444361 
http://blog.csdn.net/likebamboo/article/details/17888563
